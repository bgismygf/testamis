{"version":3,"file":"js/563.c92367c9.js","mappings":"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","sources":["webpack://amis/./src/views/outpatientDoctorTime.vue","webpack://amis/./src/views/outpatientDoctorTime.vue?ef4f"],"sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div class=\"d-flex justify-content-end mb-2\">\n      <button type=\"button\" class=\"btn btn-primary\" @click=\"openAddOutpatient()\">新增門診</button>\n    </div>\n    <div class=\"d-flex\">\n        <h3 class=\"mb-0 me-auto\">{{ data.year }} 年 {{ data.month + 1 }}月</h3>\n        <div class=\"btn-group me-2\" role=\"group\" aria-label=\"Basic example\" v-if=\"data.showContent === 'month'\">\n\n          <button type=\"button\" class=\"btn\"\n                @click=\"switchContent('month', 'AestheticMedicine')\"\n                :class=\"data.departmentId === 'AestheticMedicine' ? 'btn-primary' : 'btn-outline-primary'\">醫美部</button>\n\n          <button type=\"button\" class=\"btn\"\n                @click=\"switchContent('month', 'Beauty')\"\n                :class=\"data.departmentId === 'Beauty' ? 'btn-primary' : 'btn-outline-primary'\">美容部</button>\n        </div>\n\n        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n\n          <button type=\"button\" class=\"btn\"\n                @click=\"switchContent('month')\"\n                :class=\"data.showContent === 'month' ? 'btn-primary' : 'btn-outline-primary'\">月</button>\n\n          <button type=\"button\" class=\"btn\"\n                @click=\"switchContent('week')\"\n                :class=\"data.showContent === 'week' ? 'btn-primary' : 'btn-outline-primary'\">週</button>\n        </div>\n      </div>\n    <div v-if=\"data.showContent === 'week'\">\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">時段</th>\n            <th scope=\"col\">星期日</th>\n            <th scope=\"col\">星期一</th>\n            <th scope=\"col\">星期二</th>\n            <th scope=\"col\">星期三</th>\n            <th scope=\"col\">星期四</th>\n            <th scope=\"col\">星期五</th>\n            <th scope=\"col\">星期六</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <p class=\"mb-0\">早診</p>\n              <p class=\"mb-0\">09:00 - 11:45</p>\n              <p class=\"mb-0\">15 (分鐘)</p>\n            </td>\n            <td class=\"tb-w\" v-for=\"day in data.days\" :key=\"day\" @click.prevent=\"openModal({ clinicPeriod: 'Morning', time: '09:00 - 11:45', day}, data.morning[day])\">\n              <a href=\"#\" class=\"d-inline-block\">\n                <div class=\"d-inline-block\" v-for=\"item in allDoctorData\" :key=\"item.id\">\n                  <div class=\"me-2 mb-2\" v-if=\"data.morning && data.morning[day] && data.morning[day][item.id]\">\n                    <span v-if=\"data.morning[day][item.id]\" class=\"badge bg-primary\">{{ item.name }}</span>\n                  </div>\n                </div>\n              </a>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <p class=\"mb-0\">午診</p>\n              <p class=\"mb-0\">13:30 - 16:45</p>\n              <p class=\"mb-0\">15 (分鐘)</p>\n            </td>\n            <td class=\"tb-w\" v-for=\"day in data.days\" :key=\"day\" @click.prevent=\"openModal({ clinicPeriod: 'Afternoon', time: '13:30 - 16:45', day}, data.afternoon[day])\">\n              <a href=\"#\" class=\"d-inline-block\">\n                <div class=\"d-inline-block\" v-for=\"item in allDoctorData\" :key=\"item.id\">\n                  <div class=\"me-2 mb-2\" v-if=\"data.afternoon && data.afternoon[day] && data.afternoon[day][item.id]\">\n                    <span v-if=\"data.afternoon[day][item.id]\" class=\"badge bg-primary\">{{ item.name }}</span>\n                  </div>\n                </div>\n\n              </a>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <p class=\"mb-0\">晚診</p>\n              <p class=\"mb-0\">18:15 - 20:45</p>\n              <p class=\"mb-0\">15 (分鐘)</p>\n            </td>\n            <td class=\"tb-w\" v-for=\"day in data.days\" :key=\"day\">\n              <a href=\"#\" class=\"d-inline-block\" @click.prevent=\"openModal({ clinicPeriod: 'Evening', time: '18:15 - 20:45', day}, data.evening[day])\">\n                <div class=\"d-inline-block\" v-for=\"item in allDoctorData\" :key=\"item.id\">\n                  <div class=\"me-2 mb-2\" v-if=\"data.evening && data.evening[day] && data.evening[day][item.id]\">\n                    <span v-if=\"data.evening[day][item.id]\" class=\"badge bg-primary\">{{ item.name }}</span>\n                  </div>\n                </div>\n              </a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <div v-if=\"data.showContent === 'month'\">\n      <div class=\"d-flex justify-content-around my-6\">\n        <a href=\"#\" @click.prevent=\"switchWeek(true)\">\n          <img src=\"@/assets\\stylesheets\\icon\\arrow_left.png\" width=\"7.62\" height=\"16\" alt=\"arrow_left\">\n        </a>\n        <h3 class=\"mb-0\">{{ data.startDate.month }}/{{ data.startDate.date }} - {{ data.endDate.month }}/{{ data.endDate.date }}</h3>\n        <a href=\"#\" @click.prevent=\"switchWeek(false)\">\n          <img src=\"@/assets\\stylesheets\\icon\\arrow_right.png\" width=\"7.62\" height=\"16\" alt=\"arrow_right\">\n        </a>\n      </div>\n\n      <table class=\"table\" v-if=\"data.departmentId === 'AestheticMedicine'\">\n        <thead>\n          <tr>\n            <th width=\"14.2%\" scope=\"col\" v-for=\"(item, key) in data.calendarData[data.weekIndex]\" :key=\"key\">{{item.month}}/{{item.date}}({{ dateConversionWeek(`${item.year}-${item.month}-${item.date}`) }})</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td v-for=\"(item, key) in data.doctorWorkDayOfDateRangeData\" :key=\"key\">\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th width=\"20%\" scope=\"col\"></th>\n                    <th v-for=\"doctor in allDoctorData\" :key=\"doctor.id\" width=\"20%\" scope=\"col\">{{ doctor.name }}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"(iitem, time) in item\" :key=\"iitem\">\n                    <td>{{ convertTimeFormatDeleteSecond(time) }}</td>\n                    <td class=\"btn-box\"\n                        v-for=\"doctor in allDoctorData\"\n                        :key=\"doctor.id\"\n                        :class=\"iitem[doctor.id].open ? 'bg-primary': 'bg-gray1'\"\n                        @click=\"changeStatus(iitem[doctor.id].open, iitem[doctor.id].outpatientId)\">\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <table class=\"table\" v-if=\"data.departmentId === 'Beauty'\">\n        <thead>\n          <tr>\n            <th width=\"14.2%\" scope=\"col\" v-for=\"(item, key) in data.calendarData[data.weekIndex]\" :key=\"key\">{{item.month}}/{{item.date}}({{ dateConversionWeek(`${item.year}-${item.month}-${item.date}`) }})</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td v-for=\"(item, date) in data.departmentWorkDayOfDateRangeData\" :key=\"date\">\n              <table class=\"table table-bordered\">\n                <tbody>\n                  <tr v-for=\"(iitem, time) in item\" :key=\"time\">\n                    <td>{{ convertTimeFormatDeleteSecond(time) }}</td>\n                    <td :class=\"iitem.open ? 'bg-primary': 'bg-gray1'\"\n                        @click=\"changeStatus(iitem.open, iitem.outpatientId)\">\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n  <!-- 加入 / 刪除醫師 Modal -->\n  <div class=\"modal fade\" ref=\"modalRef\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\">{{ data.modalInfo.day }} {{ data.modalInfo.clinicPeriod}} {{ data.modalInfo.time }}</h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"p-2 mb-2\">\n            <a href=\"#\" class=\"me-2 mb-2\" v-for=\"item in data.unavailableDoctor\" :key=\"item.id\">\n              <span class=\"badge bg-primary\" @click.prevent=\"selectDoctor(item)\">{{ item.name }}</span>\n            </a>\n            \n            <span class=\"badge bg-danger\" v-if=\"data.unavailableDoctor.length === 0\">NONE</span>\n          </div>\n\n          <div class=\"border botder-primary p-2\" style=\"min-height: 200px;\">\n            <a href=\"#\" class=\"me-2 mb-2\" v-for=\"item in data.availableDoctor\" :key=\"item.id\">\n              <span class=\"badge bg-primary\" @click.prevent=\"cancelselectDoctor(item)\">{{ item.name }}</span>\n            </a>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">取消</button>\n          <button type=\"button\" class=\"btn btn-primary\" @click=\"saveSettings()\">保存</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- 新增門診 Modal -->\n  <div class=\"modal fade\" ref=\"addOutpatientModalRef\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\">新增門診</h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"row g-3 align-items-center mb-3\">\n            <div class=\"col-2\">\n              <label for=\"year\" class=\"col-form-label\">部門</label>\n            </div>\n            <div class=\"col-5\">\n              <select class=\"form-select\" v-model=\"addOutpatientModalData.departmentId\">\n                <option v-for=\"department in departmentArr\"\n                        :value=\"department.id\"\n                        :key=\"department.id\">\n                        {{ department.name }}\n                </option>\n              </select>\n            </div>\n          </div>\n\n          <div class=\"row g-3 align-items-center\">\n            <div class=\"col-auto\">\n              <select class=\"form-select\" v-model=\"addOutpatientModalData.year\">\n                <option v-for=\"num in yearArr\" :key=\"num\">{{ num }}</option>\n              </select>\n            </div>\n            <div class=\"col-auto\">\n              <label for=\"year\" class=\"col-form-label\">年</label>\n            </div>\n            <div class=\"col-auto\">\n              <select class=\"form-select\" v-model=\"addOutpatientModalData.month\">\n                <option v-for=\"num in 12\" :key=\"num\">{{ num }}</option>\n              </select>\n            </div>\n            <div class=\"col-auto\">\n              <label for=\"month\" class=\"col-form-label\">月</label>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">取消</button>\n          <button type=\"button\" class=\"btn btn-primary\" @click=\"addOutpatient()\">新增</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { onMounted, reactive, ref, inject, toRefs } from 'vue';\n  import { Modal } from 'bootstrap';\n\n  const Employee = inject('Employee');\n\n    const {\n      employeeState,\n      getAllDoctorData,\n    } = Employee;\n\n    const {\n      allDoctorData\n    } = toRefs(employeeState);\n\n    const fetchFunction = inject('fetchFunction');\n\n    const {\n      fetchApi,\n      getTokenFromCookie\n    } = fetchFunction;\n\n    const textConversionTool = inject('textConversionTool');\n\n    const {\n      convertTimeFormatDeleteSecond,\n      dateConversionWeek,\n    } = textConversionTool;\n\n    const data = reactive({\n      // base\n      showContent: 'week',\n      departmentId: 'AestheticMedicine',\n      days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n      year: '',\n      month: '',\n      date: '',\n      // week\n      doctorWorkDayOfWeekData: {},\n      morning: {},\n      afternoon: {},\n      evening: {},\n      modalInfo: {},\n      availableDoctor: [],\n      unavailableDoctor: [],\n      // month\n      departmentWorkDayOfDateRangeData: [],\n      calendarData: [],\n      startDate: '',\n      endDate: '',\n      weekIndex: '',\n    });\n\n    const modalRef = ref(null);\n\n    const alertMessage = inject('alertMessage');\n    const { updateMessage } = alertMessage;\n\n    let modal;\n\n    onMounted(() => {\n      modal = new Modal(modalRef.value);\n    })\n\n    const cancelselectDoctor = (item) => {\n      data.availableDoctor = data.availableDoctor.filter(item1 => item1 !== item);\n      data.unavailableDoctor.push(item);\n    }\n\n    const selectDoctor = (item) => {\n      data.unavailableDoctor = data.unavailableDoctor.filter(item1 => item1 !== item);\n      data.availableDoctor.push(item);\n    }\n\n    const saveSettings = async () => {\n      const url = `/api/Outpatient/AdjustDoctorOutpatientOpenStatusOfWeek`;\n\n      const putData = {\n        departmentId: data.departmentId,\n        year: data.year,\n        month: data.month + 1,\n        clinicPeriod: data.modalInfo.clinicPeriod,\n        dayOfWeek: data.modalInfo.day,\n        doctorsToOpen: data.availableDoctor.map(item => item.id),\n        doctorsToClose: data.unavailableDoctor.map(item => item.id),\n      }\n      const token = getTokenFromCookie();\n\n      const options = {\n        headers: {\n          'Content-Type': 'application/json',\n          \"Authorization\" : `Bearer ${token}`\n        },\n        method: 'PATCH',\n        body: JSON.stringify(putData),\n      }\n\n      const response = await fetchApi(url, options);\n      \n      updateMessage(response.message);\n\n      if (response.statusCode >= 400) return null;\n\n      getDoctorWorkDayOfWeekData();\n      modal.hide();\n    }\n\n    /** 開啟調整醫師門診狀態 modal */\n    const openModal = (info, doctors) => {\n      data.availableDoctor = [];\n      data.unavailableDoctor = [];\n      data.modalInfo = info;\n\n      employeeState.allDoctorData.forEach(item => {\n        if (doctors[item.id]) {\n          data.availableDoctor.push({ name: item.name, id: item.id });\n        }\n      })\n\n      employeeState.allDoctorData.forEach(item => {\n        if (!doctors[item.id]) {\n          data.unavailableDoctor.push({ name: item.name, id: item.id });\n        }\n      })\n\n      modal.show();\n    }\n\n    function getToday() {\n      const today = new Date();\n      data.year = today.getFullYear();\n      data.month = today.getMonth();\n      data.date = today.getDate();\n    }\n\n    function getCalendar(year, month) {\n      let date = new Date(year, month + 1, 1);\n      date.setHours(date.getHours() - 1);\n      const allDate = date.getDate();\n      let calendar = [];\n      let week = [];\n\n      for (let i = 1; i <= allDate; i++) {\n\n        let day = new Date(year, month, i).getDay(); // 星期 : 0 - 6\n          if (month === 12) {\n            month = 0;\n            year += 1;\n          }\n\n          if (month === -1) {\n            month = 11;\n            year -= 1;\n          }\n\n          week.push({\n            year: year,\n            month: month + 1,\n            date: i,\n            day: day,\n          });\n\n          if (day === 6 || i === allDate) {\n            calendar.push(week);\n            week = [];\n          }\n      }\n\n      return calendar;\n    }\n\n    /** 顯示當月的總日，並把上、下個月的零碎日子加入 */\n    const showCalendar = (year, month) => {\n      let currentMonth = getCalendar(year, month);\n\n      const firstWeekLen = currentMonth[0].length;\n      const lastWeekLen = currentMonth[currentMonth.length - 1].length;\n\n      if (firstWeekLen < 7 && firstWeekLen !== 0) {\n        let lastMonth = getCalendar(year, month - 1);\n        \n        currentMonth[0] = lastMonth[lastMonth.length - 1].concat(currentMonth[0]);\n      }\n      \n      if (lastWeekLen < 7 && lastWeekLen !== 0) {\n        let nextMonth = getCalendar(year, month + 1);\n        currentMonth[currentMonth.length - 1] = currentMonth[currentMonth.length - 1].concat(nextMonth[0]);\n      }\n\n      for(let i = 0; i < currentMonth.length; i++) {\n        if (currentMonth[i].length === 0) {\n          currentMonth.splice(i, 1);\n        }\n      }\n\n      \n      data.calendarData = currentMonth;\n    }\n\n    // month\n    const switchContent = (status, departmentId = 'AestheticMedicine') => {\n      data.showContent = status;\n      data.departmentId = departmentId;\n\n      if (status === 'month') {\n        getStartDateAndEndDate();\n        if (data.departmentId === 'AestheticMedicine') {\n          getDoctorWorkDayOfDateRangeData();\n        } else {\n          getDepartmentWorkDayOfDateRangeData();\n        }\n      }\n\n      if (status === 'week') {\n        getToday();\n        showCalendar(data.year, data.month);\n        getDoctorWorkDayOfWeekData();\n      }\n    }\n\n    const changeStatus = async(isOpen, outpatientId) => {\n      const putData = {\n        outpatientId: outpatientId,\n        open: isOpen ? false : true,\n      }\n\n      const url = `/api/Outpatient/AdjustOutpatientOpenStatusOfDay`;\n\n      const token = getTokenFromCookie();\n\n      const options = {\n        headers: {\n          'Content-Type': 'application/json',\n          \"Authorization\" : `Bearer ${token}`\n        },\n        method: 'PATCH',\n        body: JSON.stringify(putData),\n      }\n\n      const response = await fetchApi(url, options);\n\n      updateMessage(response.message);\n\n      if (response.statusCode >= 400) return null;\n\n      if (data.departmentId === 'AestheticMedicine') {\n        getDoctorWorkDayOfDateRangeData();\n      } else {\n        getDepartmentWorkDayOfDateRangeData();\n      }\n    }\n\n    /** 取日期範圍 */\n    function getStartDateAndEndDate() {\n\n      data.calendarData.forEach((item, i) => {\n        const num = item.findIndex(iitem => iitem.year === data.year && iitem.month === data.month + 1 && iitem.date === data.date);\n        if (num !== -1) {\n          data.weekIndex = i;\n        }\n      });\n      data.startDate = data.calendarData[data.weekIndex][0];\n      data.endDate = data.calendarData[data.weekIndex][data.calendarData[data.weekIndex].length - 1];\n    }\n\n    const switchWeek = (left) => {\n      if (data.weekIndex === 0 && left) {\n        data.month = data.month - 1;\n\n        if (data.month === 12) {\n          data.month = 0;\n          data.year += 1;\n        }\n\n        if (data.month === -1) {\n          data.month = 11;\n          data.year -= 1;\n        }\n        showCalendar(data.year, data.month);\n\n        const monday = data.calendarData[data.calendarData.length - 1][0].month;\n\n        const judge = data.calendarData[data.calendarData.length - 1].every(item => item.month === monday);\n\n        data.weekIndex = judge ? data.calendarData.length - 1 : data.calendarData.length - 2;\n        showSwitchWeekAfterData();\n        return null;\n      }\n\n      if (data.weekIndex === data.calendarData.length - 1 && !left) {\n        data.month = data.month + 1;\n        if (data.month === 12) {\n          data.month = 0;\n          data.year += 1;\n        }\n\n        if (data.month === -1) {\n          data.month = 11;\n          data.year -= 1;\n        }\n        showCalendar(data.year, data.month);\n\n        const saturday = data.calendarData[0][data.calendarData[0].length - 1].month;\n\n        const judge = data.calendarData[0].every(item => item.month === saturday);\n\n        data.weekIndex = judge ? 0 : 1;\n\n        showSwitchWeekAfterData();\n\n        return null;\n      }\n\n      if (left) {\n        data.weekIndex = data.weekIndex - 1;\n      } else {\n        data.weekIndex = data.weekIndex + 1;\n      }\n\n      showSwitchWeekAfterData();\n    }\n\n    function showSwitchWeekAfterData() {\n      data.startDate = data.calendarData[data.weekIndex][0];\n      data.endDate = data.calendarData[data.weekIndex][data.calendarData[data.weekIndex].length - 1];\n\n      if (data.departmentId === 'AestheticMedicine') {\n        getDoctorWorkDayOfDateRangeData();\n      } else {\n        getDepartmentWorkDayOfDateRangeData();\n      }\n    }\n\n    /** 取得全部部門 */\n    async function getAllDepartment() {\n      const url = `/api/Department/GetAll`;\n\n      const token = getTokenFromCookie();\n\n      const options = {\n        headers: {\n          'Content-Type': 'application/json',\n          \"Authorization\" : `Bearer ${token}`\n        },\n        method: 'GET'\n      }\n\n      const response = await fetchApi(url, options);\n\n      return response.data;\n    }\n    \n    const addOutpatientModalRef = ref(null);\n    let addOutpatientModal;\n\n    onMounted(() => {\n      addOutpatientModal = new Modal(addOutpatientModalRef.value);\n    })\n\n    const yearArr = ref([]);\n    const addOutpatientModalData = ref({});\n    const departmentArr = ref([]);\n\n    /** 開啟新增門診 */\n    const openAddOutpatient = async() => {\n      departmentArr.value = await getAllDepartment();\n\n      const date = new Date();\n      const year = date.getFullYear();\n      const month = date.getMonth();\n\n      const arr = [];\n\n      for (let i = 0; i < 8; i++) {\n        arr.push(year - i);\n      }\n\n      addOutpatientModalData.value = {\n        departmentId: departmentArr.value[0].id,\n        year,\n        month: month + 1\n      }\n\n      yearArr.value = arr;\n      addOutpatientModal.show();\n    }\n\n    /** 確認新增門診 */\n    async function addOutpatient() {\n      const url = `/api/Outpatient/GenerateOutpatient`;\n\n      const token = getTokenFromCookie();\n\n      const POSTData = {\n        ...addOutpatientModalData.value\n      }\n\n      const options = {\n        headers: {\n          'Content-Type': 'application/json',\n          \"Authorization\" : `Bearer ${token}`\n        },\n        method: 'POST',\n        body: JSON.stringify(POSTData),\n      }\n\n      const response = await fetchApi(url, options);\n\n      updateMessage(response.message);\n\n      if (response.statusCode >= 400) return null;\n\n      addOutpatientModal.hide();\n    }\n\n    // get data\n\n    /** 取得醫師門診狀況(週) */\n    async function getDoctorWorkDayOfWeekData() {\n\n      const url = `/api/Outpatient/GetDoctorWorkDayOfWeekData?departmentId=${data.departmentId}&year=${data.year}&month=${data.month + 1}`;\n\n      const token = getTokenFromCookie();\n\n      const options = {\n        headers: {\n          'Content-Type': 'application/json',\n          \"Authorization\" : `Bearer ${token}`\n        },\n        method: 'GET'\n      }\n\n      const response = await fetchApi(url, options);\n\n      data.doctorWorkDayOfWeekData = response.data;\n\n      const { Morning, Afternoon, Evening } = data.doctorWorkDayOfWeekData;\n\n      data.morning = Morning;\n      data.afternoon = Afternoon;\n      data.evening = Evening;\n    }\n\n    /** 取得醫師門診狀況(月) */\n    async function getDoctorWorkDayOfDateRangeData() {\n      const url = `/api/Outpatient/GetDoctorWorkDayOfDateRangeData?departmentId=AestheticMedicine\n                  &startDate=${data.startDate.year}-${data.startDate.month < 9 ? '0':''}${data.startDate.month}-${data.startDate.date < 9 ? '0':''}${data.startDate.date}\n                  &endDate=${data.endDate.year}-${data.endDate.month < 9 ? '0':''}${data.endDate.month}-${data.endDate.date < 9 ? '0':''}${data.endDate.date}`;\n\n      const token = getTokenFromCookie();\n\n      const options = {\n        headers: {\n          'Content-Type': 'application/json',\n          \"Authorization\" : `Bearer ${token}`\n        },\n        method: 'GET'\n      }\n\n      const response = await fetchApi(url, options);\n\n      data.doctorWorkDayOfDateRangeData = response.data;\n    }\n\n    /** 取得美容部門診狀況(月) */\n    async function getDepartmentWorkDayOfDateRangeData() {\n      const url = `/api/Outpatient/GetDepartmentWorkDayOfDateRangeData?departmentId=Beauty\n                  &startDate=${data.startDate.year}-${data.startDate.month < 9 ? '0':''}${data.startDate.month}-${data.startDate.date < 9 ? '0':''}${data.startDate.date}\n                  &endDate=${data.endDate.year}-${data.endDate.month < 9 ? '0':''}${data.endDate.month}-${data.endDate.date < 9 ? '0':''}${data.endDate.date}`;\n\n      const token = getTokenFromCookie();\n\n      const options = {\n        headers: {\n          'Content-Type': 'application/json',\n          \"Authorization\" : `Bearer ${token}`\n        },\n        method: 'GET'\n      }\n\n      const response = await fetchApi(url, options);\n\n      data.departmentWorkDayOfDateRangeData = response.data;\n    }\n\n\n    /** 初始 */\n    async function init() {\n      getToday();\n      showCalendar(data.year, data.month);\n      await getAllDoctorData();\n      await getDoctorWorkDayOfWeekData();\n    }\n\n    init();\n</script>\n\n<style leng=\"scss\" scoped>\n  .tb-w {\n    width: 12.5%;\n  }\n\n  .btn-box {\n    cursor: pointer;\n  }\n</style>","import script from \"./outpatientDoctorTime.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./outpatientDoctorTime.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./outpatientDoctorTime.vue?vue&type=style&index=0&id=476bedf3&leng=scss&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\shang\\\\OneDrive\\\\桌面\\\\amis\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-476bedf3\"]])\n\nexport default __exports__"],"names":["Employee","inject","employeeState","getAllDoctorData","allDoctorData","toRefs","fetchFunction","fetchApi","getTokenFromCookie","textConversionTool","convertTimeFormatDeleteSecond","dateConversionWeek","data","reactive","showContent","departmentId","days","year","month","date","doctorWorkDayOfWeekData","morning","afternoon","evening","modalInfo","availableDoctor","unavailableDoctor","departmentWorkDayOfDateRangeData","calendarData","startDate","endDate","weekIndex","modalRef","ref","alertMessage","updateMessage","modal","onMounted","Modal","value","cancelselectDoctor","item","filter","item1","push","selectDoctor","saveSettings","async","url","putData","clinicPeriod","dayOfWeek","day","doctorsToOpen","map","id","doctorsToClose","token","options","headers","method","body","JSON","stringify","response","message","statusCode","getDoctorWorkDayOfWeekData","hide","openModal","info","doctors","forEach","name","show","getToday","today","Date","getFullYear","getMonth","getDate","getCalendar","setHours","getHours","allDate","calendar","week","i","getDay","showCalendar","currentMonth","firstWeekLen","length","lastWeekLen","lastMonth","concat","nextMonth","splice","switchContent","status","getStartDateAndEndDate","getDoctorWorkDayOfDateRangeData","getDepartmentWorkDayOfDateRangeData","changeStatus","isOpen","outpatientId","open","num","findIndex","iitem","switchWeek","left","monday","judge","every","showSwitchWeekAfterData","saturday","getAllDepartment","addOutpatientModalRef","addOutpatientModal","yearArr","addOutpatientModalData","departmentArr","openAddOutpatient","arr","addOutpatient","POSTData","Morning","Afternoon","Evening","doctorWorkDayOfDateRangeData","init","__exports__"],"sourceRoot":""}